stages:
  - compile
  - build
compile:
  image: node:14.4.0-alpine3.11
  stage: compile
  cache:
    paths:
      - node_modules/
  script:
    - yarn install --frozen-lock
    - yarn compile
    - yarn lint
build-version:
  image: docker:19.03.11
  stage: build
  variables:
    CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_BUILD_TAG
    CONTAINER_CACHE_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/cache:release
  only:
    - /^(\w+\.\w+\.\w+)-(sprint\d+)(?>-((?>dev|fix|hotfix)\d+))?(?>\+(.*))?$/i
  services:
    - docker:19.03.11-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_CACHE_RELEASE_IMAGE || true
  script:
    - docker build --cache-from $CONTAINER_CACHE_RELEASE_IMAGE --tag $CONTAINER_RELEASE_IMAGE --tag $CONTAINER_CACHE_RELEASE_IMAGE .
    - docker push $CONTAINER_CACHE_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
build-branch:
  image: docker:19.03.11
  stage: build
  variables:
    CONTAINER_CACHE_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/cache:release
  only:
    - master
  services:
    - docker:19.03.11-dind
  before_script:
    - export RELEASE_TIME=$(date +%s)
    - export CONTAINER_RELEASE_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-$RELEASE_TIME-$CI_COMMIT_SHORT_SHA
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_CACHE_RELEASE_IMAGE || true
  script:
    - docker build --cache-from $CONTAINER_CACHE_RELEASE_IMAGE --tag $CONTAINER_RELEASE_IMAGE --tag $CONTAINER_CACHE_RELEASE_IMAGE .
    - docker push $CONTAINER_CACHE_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
